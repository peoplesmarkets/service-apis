syntax = "proto3";

package peoplesmarkets.payment.v1;

service StripeService {
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
  rpc CreateAccountLink(CreateAccountLinkRequest) returns (CreateAccountLinkResponse);
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);
  rpc GetAccountDetails(GetAccountDetailsRequest) returns (GetAccountDetailsResponse);
  rpc CreateCheckoutSession(CreateCheckoutSessionRequest) returns (CreateCheckoutSessionResponse);
  rpc CancelSubscription(CancelSubscriptionRequest) returns (CancelSubscriptionResponse);
  rpc ResumeSubscription(ResumeSubscriptionRequest) returns (ResumeSubscriptionResponse);
}

message StripeAccount {
  string shop_id = 1;
  string stripe_account_id = 2;
  bool enabled = 3;
}

message StripeAccountDetails {
  bool charges_enabled = 1;
  bool details_submitted = 2;
}

message CreateAccountRequest {
  string shop_id = 1;
}

message CreateAccountResponse {
  StripeAccount account = 1;
}

message CreateAccountLinkRequest {
  string shop_id = 1;
  string refresh_url = 2;
  string return_url = 3;
}

message CreateAccountLinkResponse {
  string link = 1;
}

message GetAccountRequest {
  string shop_id = 1;
}

message GetAccountResponse {
  StripeAccount account = 1;
}

message GetAccountDetailsRequest {
  string shop_id = 1;
}

message GetAccountDetailsResponse {
  StripeAccount account = 1;
  StripeAccountDetails details = 2;
}

message CreateCheckoutSessionRequest {
  string offer_id = 1;
  string success_url = 2;
  string cancel_url = 3;
}

message CreateCheckoutSessionResponse {
  string link = 1;
}

message CancelSubscriptionRequest {
  string stripe_subscription_id = 1;
}

message CancelSubscriptionResponse {}

message ResumeSubscriptionRequest {
  string stripe_subscription_id = 1;
}

message ResumeSubscriptionResponse {}
